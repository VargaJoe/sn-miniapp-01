// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The list panel layout instance should renders correctly 1`] = `
<ListPanel
  data={
    Array [
      Object {
        "Actions": Array [
          Object {
            "DisplayName": "Add",
            "Forbidden": false,
            "Name": "Remove",
          },
        ],
        "CreatedBy": Object {
          "Avatar": "/Root/Content",
          "DisplayName": "Test User",
        },
        "CreationDate": "2019-10-08T01:07:09.42Z",
        "Description": "LargeExcelFile.xlsx description",
        "DisplayName": "LargeExcelFile.xlsx",
        "Id": 5908,
        "ModificationDate": "2019-10-08T05:07:09.42Z",
        "ModifiedBy": Object {
          "Avatar": "/Root/Content",
          "DisplayName": "Test User",
        },
        "Name": "LargeExcelFile.xlsx",
        "Path": "/Root/TestB",
        "Status": Array [
          "active",
        ],
        "Type": "Task",
      },
      Object {
        "Actions": Array [
          Object {
            "DisplayName": "Add",
            "Forbidden": false,
            "Name": "Add",
          },
          Object {
            "DisplayName": "Add",
            "Forbidden": false,
            "Name": "Remove",
          },
        ],
        "CreatedBy": Object {
          "Avatar": "/Root/Content",
          "DisplayName": "Test User",
        },
        "CreationDate": "2019-10-08T01:07:09.42Z",
        "Description": "Calgary description",
        "DisplayName": "Calgary",
        "Id": 1645,
        "ModificationDate": "2019-10-08T05:07:09.42Z",
        "ModifiedBy": Object {
          "Avatar": "/Root/Content",
          "DisplayName": "Test User",
        },
        "Name": "Calgary",
        "Path": "/Root/TestB",
        "Status": Array [
          "active",
        ],
        "Type": "Task",
      },
      Object {
        "Actions": Array [
          Object {
            "DisplayName": "Add",
            "Forbidden": false,
            "Name": "Add",
          },
          Object {
            "DisplayName": "Add",
            "Forbidden": false,
            "Name": "Remove",
          },
        ],
        "CreatedBy": Object {
          "Avatar": "/Root/Content",
          "DisplayName": "Test User",
        },
        "CreationDate": "2019-10-08T01:07:09.42Z",
        "Description": "Brazzaville description",
        "DisplayName": "Valami",
        "Id": 1498,
        "ModificationDate": "2019-10-08T05:07:09.42Z",
        "ModifiedBy": Object {
          "Avatar": "/Root/Content",
          "DisplayName": "Test User",
        },
        "Name": "Valami",
        "Path": "/Root/Test",
        "Status": Array [
          "active",
        ],
        "Type": "Task",
      },
    ]
  }
  setData={[MockFunction]}
>
  <div>
    <WithStyles(ForwardRef(ListItem))
      button={true}
      classes={
        Object {
          "container": "makeStyles-listItem-5",
        }
      }
      dense={true}
      key="5908"
    >
      <ForwardRef(ListItem)
        button={true}
        classes={
          Object {
            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
            "button": "MuiListItem-button",
            "container": "MuiListItem-container makeStyles-listItem-5",
            "dense": "MuiListItem-dense",
            "disabled": "Mui-disabled",
            "divider": "MuiListItem-divider",
            "focusVisible": "Mui-focusVisible",
            "gutters": "MuiListItem-gutters",
            "root": "MuiListItem-root",
            "secondaryAction": "MuiListItem-secondaryAction",
            "selected": "Mui-selected",
          }
        }
        dense={true}
      >
        <li
          className="MuiListItem-container makeStyles-listItem-5"
        >
          <WithStyles(ForwardRef(ButtonBase))
            className="MuiListItem-root MuiListItem-dense MuiListItem-gutters MuiListItem-button MuiListItem-secondaryAction"
            component="div"
            disabled={false}
            focusVisibleClassName="Mui-focusVisible"
          >
            <ForwardRef(ButtonBase)
              className="MuiListItem-root MuiListItem-dense MuiListItem-gutters MuiListItem-button MuiListItem-secondaryAction"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="div"
              disabled={false}
              focusVisibleClassName="Mui-focusVisible"
            >
              <div
                aria-disabled={false}
                className="MuiButtonBase-root MuiListItem-root MuiListItem-dense MuiListItem-gutters MuiListItem-button MuiListItem-secondaryAction"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={0}
              >
                <WithStyles(ForwardRef(ListItemIcon))
                  key=".0"
                >
                  <ForwardRef(ListItemIcon)
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                        "root": "MuiListItemIcon-root",
                      }
                    }
                  >
                    <div
                      className="MuiListItemIcon-root"
                    >
                      <WithStyles(ForwardRef(Checkbox))
                        checked={false}
                        disableRipple={true}
                        edge="start"
                        inputProps={
                          Object {
                            "aria-labelledby": "checkbox-list-label-5908",
                          }
                        }
                        onClick={[Function]}
                        tabIndex={-1}
                      >
                        <ForwardRef(Checkbox)
                          checked={false}
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "colorPrimary": "MuiCheckbox-colorPrimary",
                              "colorSecondary": "MuiCheckbox-colorSecondary",
                              "disabled": "Mui-disabled",
                              "indeterminate": "MuiCheckbox-indeterminate",
                              "root": "MuiCheckbox-root",
                            }
                          }
                          disableRipple={true}
                          edge="start"
                          inputProps={
                            Object {
                              "aria-labelledby": "checkbox-list-label-5908",
                            }
                          }
                          onClick={[Function]}
                          tabIndex={-1}
                        >
                          <WithStyles(ForwardRef(SwitchBase))
                            checked={false}
                            checkedIcon={<UNDEFINED />}
                            classes={
                              Object {
                                "checked": "Mui-checked",
                                "disabled": "Mui-disabled",
                                "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                              }
                            }
                            color="secondary"
                            disableRipple={true}
                            disabled={false}
                            edge="start"
                            icon={<UNDEFINED />}
                            inputProps={
                              Object {
                                "aria-labelledby": "checkbox-list-label-5908",
                                "data-indeterminate": false,
                              }
                            }
                            onClick={[Function]}
                            tabIndex={-1}
                            type="checkbox"
                          >
                            <ForwardRef(SwitchBase)
                              checked={false}
                              checkedIcon={<UNDEFINED />}
                              classes={
                                Object {
                                  "checked": "PrivateSwitchBase-checked-29 Mui-checked",
                                  "disabled": "PrivateSwitchBase-disabled-30 Mui-disabled",
                                  "input": "PrivateSwitchBase-input-31",
                                  "root": "PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary",
                                }
                              }
                              color="secondary"
                              disableRipple={true}
                              disabled={false}
                              edge="start"
                              icon={<UNDEFINED />}
                              inputProps={
                                Object {
                                  "aria-labelledby": "checkbox-list-label-5908",
                                  "data-indeterminate": false,
                                }
                              }
                              onClick={[Function]}
                              tabIndex={-1}
                              type="checkbox"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                className="PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                color="secondary"
                                component="span"
                                disableRipple={true}
                                disabled={false}
                                edge="start"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  className="PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  color="secondary"
                                  component="span"
                                  disableRipple={true}
                                  disabled={false}
                                  edge="start"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary MuiIconButton-edgeStart"
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary MuiIconButton-edgeStart"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        aria-disabled={false}
                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary MuiIconButton-edgeStart"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <input
                                            aria-labelledby="checkbox-list-label-5908"
                                            checked={false}
                                            className="PrivateSwitchBase-input-31"
                                            data-indeterminate={false}
                                            disabled={false}
                                            onChange={[Function]}
                                            tabIndex={-1}
                                            type="checkbox"
                                          />
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </span>
                                      </span>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </ForwardRef(SwitchBase)>
                          </WithStyles(ForwardRef(SwitchBase))>
                        </ForwardRef(Checkbox)>
                      </WithStyles(ForwardRef(Checkbox))>
                    </div>
                  </ForwardRef(ListItemIcon)>
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))
                  className=""
                  id="checkbox-list-label-5908"
                  key=".1"
                  primary="LargeExcelFile.xlsx"
                >
                  <ForwardRef(ListItemText)
                    className=""
                    classes={
                      Object {
                        "dense": "MuiListItemText-dense",
                        "inset": "MuiListItemText-inset",
                        "multiline": "MuiListItemText-multiline",
                        "primary": "MuiListItemText-primary",
                        "root": "MuiListItemText-root",
                        "secondary": "MuiListItemText-secondary",
                      }
                    }
                    id="checkbox-list-label-5908"
                    primary="LargeExcelFile.xlsx"
                  >
                    <div
                      className="MuiListItemText-root MuiListItemText-dense"
                      id="checkbox-list-label-5908"
                    >
                      <WithStyles(ForwardRef(Typography))
                        className="MuiListItemText-primary"
                        component="span"
                        variant="body2"
                      >
                        <ForwardRef(Typography)
                          className="MuiListItemText-primary"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          component="span"
                          variant="body2"
                        >
                          <span
                            className="MuiTypography-root MuiListItemText-primary MuiTypography-body2"
                          >
                            LargeExcelFile.xlsx
                          </span>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </div>
                  </ForwardRef(ListItemText)>
                </WithStyles(ForwardRef(ListItemText))>
                <NoSsr>
                  <WithStyles(undefined)
                    center={false}
                  >
                    <ForwardRef(TouchRipple)
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child",
                          "childLeaving": "MuiTouchRipple-childLeaving",
                          "childPulsate": "MuiTouchRipple-childPulsate",
                          "ripple": "MuiTouchRipple-ripple",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                          "root": "MuiTouchRipple-root",
                        }
                      }
                    >
                      <span
                        className="MuiTouchRipple-root"
                      >
                        <TransitionGroup
                          childFactory={[Function]}
                          component={null}
                          exit={true}
                        />
                      </span>
                    </ForwardRef(TouchRipple)>
                  </WithStyles(undefined)>
                </NoSsr>
              </div>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
          <WithStyles(ForwardRef(ListItemSecondaryAction))
            className="makeStyles-listItemSecondaryAction-4"
            key=".2"
          >
            <ForwardRef(ListItemSecondaryAction)
              className="makeStyles-listItemSecondaryAction-4"
              classes={
                Object {
                  "root": "MuiListItemSecondaryAction-root",
                }
              }
            >
              <div
                className="MuiListItemSecondaryAction-root makeStyles-listItemSecondaryAction-4"
              >
                <WithStyles(ForwardRef(IconButton))
                  aria-label="Delete"
                  edge="end"
                  id="checkbox-list-deletebtn-5908"
                  onClick={[Function]}
                >
                  <ForwardRef(IconButton)
                    aria-label="Delete"
                    classes={
                      Object {
                        "colorInherit": "MuiIconButton-colorInherit",
                        "colorPrimary": "MuiIconButton-colorPrimary",
                        "colorSecondary": "MuiIconButton-colorSecondary",
                        "disabled": "Mui-disabled",
                        "edgeEnd": "MuiIconButton-edgeEnd",
                        "edgeStart": "MuiIconButton-edgeStart",
                        "label": "MuiIconButton-label",
                        "root": "MuiIconButton-root",
                        "sizeSmall": "MuiIconButton-sizeSmall",
                      }
                    }
                    edge="end"
                    id="checkbox-list-deletebtn-5908"
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      aria-label="Delete"
                      centerRipple={true}
                      className="MuiIconButton-root MuiIconButton-edgeEnd"
                      disabled={false}
                      focusRipple={true}
                      id="checkbox-list-deletebtn-5908"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        aria-label="Delete"
                        centerRipple={true}
                        className="MuiIconButton-root MuiIconButton-edgeEnd"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        disabled={false}
                        focusRipple={true}
                        id="checkbox-list-deletebtn-5908"
                        onClick={[Function]}
                      >
                        <button
                          aria-label="Delete"
                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeEnd"
                          disabled={false}
                          id="checkbox-list-deletebtn-5908"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <span
                            className="MuiIconButton-label"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                          <NoSsr>
                            <WithStyles(undefined)
                              center={true}
                            >
                              <ForwardRef(TouchRipple)
                                center={true}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(undefined)>
                          </NoSsr>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(IconButton)>
                </WithStyles(ForwardRef(IconButton))>
              </div>
            </ForwardRef(ListItemSecondaryAction)>
          </WithStyles(ForwardRef(ListItemSecondaryAction))>
        </li>
      </ForwardRef(ListItem)>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(ListItem))
      button={true}
      classes={
        Object {
          "container": "makeStyles-listItem-5",
        }
      }
      dense={true}
      key="1645"
    >
      <ForwardRef(ListItem)
        button={true}
        classes={
          Object {
            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
            "button": "MuiListItem-button",
            "container": "MuiListItem-container makeStyles-listItem-5",
            "dense": "MuiListItem-dense",
            "disabled": "Mui-disabled",
            "divider": "MuiListItem-divider",
            "focusVisible": "Mui-focusVisible",
            "gutters": "MuiListItem-gutters",
            "root": "MuiListItem-root",
            "secondaryAction": "MuiListItem-secondaryAction",
            "selected": "Mui-selected",
          }
        }
        dense={true}
      >
        <li
          className="MuiListItem-container makeStyles-listItem-5"
        >
          <WithStyles(ForwardRef(ButtonBase))
            className="MuiListItem-root MuiListItem-dense MuiListItem-gutters MuiListItem-button MuiListItem-secondaryAction"
            component="div"
            disabled={false}
            focusVisibleClassName="Mui-focusVisible"
          >
            <ForwardRef(ButtonBase)
              className="MuiListItem-root MuiListItem-dense MuiListItem-gutters MuiListItem-button MuiListItem-secondaryAction"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="div"
              disabled={false}
              focusVisibleClassName="Mui-focusVisible"
            >
              <div
                aria-disabled={false}
                className="MuiButtonBase-root MuiListItem-root MuiListItem-dense MuiListItem-gutters MuiListItem-button MuiListItem-secondaryAction"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={0}
              >
                <WithStyles(ForwardRef(ListItemIcon))
                  key=".0"
                >
                  <ForwardRef(ListItemIcon)
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                        "root": "MuiListItemIcon-root",
                      }
                    }
                  >
                    <div
                      className="MuiListItemIcon-root"
                    >
                      <WithStyles(ForwardRef(Checkbox))
                        checked={false}
                        disableRipple={true}
                        edge="start"
                        inputProps={
                          Object {
                            "aria-labelledby": "checkbox-list-label-1645",
                          }
                        }
                        onClick={[Function]}
                        tabIndex={-1}
                      >
                        <ForwardRef(Checkbox)
                          checked={false}
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "colorPrimary": "MuiCheckbox-colorPrimary",
                              "colorSecondary": "MuiCheckbox-colorSecondary",
                              "disabled": "Mui-disabled",
                              "indeterminate": "MuiCheckbox-indeterminate",
                              "root": "MuiCheckbox-root",
                            }
                          }
                          disableRipple={true}
                          edge="start"
                          inputProps={
                            Object {
                              "aria-labelledby": "checkbox-list-label-1645",
                            }
                          }
                          onClick={[Function]}
                          tabIndex={-1}
                        >
                          <WithStyles(ForwardRef(SwitchBase))
                            checked={false}
                            checkedIcon={<UNDEFINED />}
                            classes={
                              Object {
                                "checked": "Mui-checked",
                                "disabled": "Mui-disabled",
                                "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                              }
                            }
                            color="secondary"
                            disableRipple={true}
                            disabled={false}
                            edge="start"
                            icon={<UNDEFINED />}
                            inputProps={
                              Object {
                                "aria-labelledby": "checkbox-list-label-1645",
                                "data-indeterminate": false,
                              }
                            }
                            onClick={[Function]}
                            tabIndex={-1}
                            type="checkbox"
                          >
                            <ForwardRef(SwitchBase)
                              checked={false}
                              checkedIcon={<UNDEFINED />}
                              classes={
                                Object {
                                  "checked": "PrivateSwitchBase-checked-29 Mui-checked",
                                  "disabled": "PrivateSwitchBase-disabled-30 Mui-disabled",
                                  "input": "PrivateSwitchBase-input-31",
                                  "root": "PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary",
                                }
                              }
                              color="secondary"
                              disableRipple={true}
                              disabled={false}
                              edge="start"
                              icon={<UNDEFINED />}
                              inputProps={
                                Object {
                                  "aria-labelledby": "checkbox-list-label-1645",
                                  "data-indeterminate": false,
                                }
                              }
                              onClick={[Function]}
                              tabIndex={-1}
                              type="checkbox"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                className="PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                color="secondary"
                                component="span"
                                disableRipple={true}
                                disabled={false}
                                edge="start"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  className="PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  color="secondary"
                                  component="span"
                                  disableRipple={true}
                                  disabled={false}
                                  edge="start"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary MuiIconButton-edgeStart"
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary MuiIconButton-edgeStart"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        aria-disabled={false}
                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary MuiIconButton-edgeStart"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <input
                                            aria-labelledby="checkbox-list-label-1645"
                                            checked={false}
                                            className="PrivateSwitchBase-input-31"
                                            data-indeterminate={false}
                                            disabled={false}
                                            onChange={[Function]}
                                            tabIndex={-1}
                                            type="checkbox"
                                          />
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </span>
                                      </span>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </ForwardRef(SwitchBase)>
                          </WithStyles(ForwardRef(SwitchBase))>
                        </ForwardRef(Checkbox)>
                      </WithStyles(ForwardRef(Checkbox))>
                    </div>
                  </ForwardRef(ListItemIcon)>
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))
                  className=""
                  id="checkbox-list-label-1645"
                  key=".1"
                  primary="Calgary"
                >
                  <ForwardRef(ListItemText)
                    className=""
                    classes={
                      Object {
                        "dense": "MuiListItemText-dense",
                        "inset": "MuiListItemText-inset",
                        "multiline": "MuiListItemText-multiline",
                        "primary": "MuiListItemText-primary",
                        "root": "MuiListItemText-root",
                        "secondary": "MuiListItemText-secondary",
                      }
                    }
                    id="checkbox-list-label-1645"
                    primary="Calgary"
                  >
                    <div
                      className="MuiListItemText-root MuiListItemText-dense"
                      id="checkbox-list-label-1645"
                    >
                      <WithStyles(ForwardRef(Typography))
                        className="MuiListItemText-primary"
                        component="span"
                        variant="body2"
                      >
                        <ForwardRef(Typography)
                          className="MuiListItemText-primary"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          component="span"
                          variant="body2"
                        >
                          <span
                            className="MuiTypography-root MuiListItemText-primary MuiTypography-body2"
                          >
                            Calgary
                          </span>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </div>
                  </ForwardRef(ListItemText)>
                </WithStyles(ForwardRef(ListItemText))>
                <NoSsr>
                  <WithStyles(undefined)
                    center={false}
                  >
                    <ForwardRef(TouchRipple)
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child",
                          "childLeaving": "MuiTouchRipple-childLeaving",
                          "childPulsate": "MuiTouchRipple-childPulsate",
                          "ripple": "MuiTouchRipple-ripple",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                          "root": "MuiTouchRipple-root",
                        }
                      }
                    >
                      <span
                        className="MuiTouchRipple-root"
                      >
                        <TransitionGroup
                          childFactory={[Function]}
                          component={null}
                          exit={true}
                        />
                      </span>
                    </ForwardRef(TouchRipple)>
                  </WithStyles(undefined)>
                </NoSsr>
              </div>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
          <WithStyles(ForwardRef(ListItemSecondaryAction))
            className="makeStyles-listItemSecondaryAction-4"
            key=".2"
          >
            <ForwardRef(ListItemSecondaryAction)
              className="makeStyles-listItemSecondaryAction-4"
              classes={
                Object {
                  "root": "MuiListItemSecondaryAction-root",
                }
              }
            >
              <div
                className="MuiListItemSecondaryAction-root makeStyles-listItemSecondaryAction-4"
              >
                <WithStyles(ForwardRef(IconButton))
                  aria-label="Delete"
                  edge="end"
                  id="checkbox-list-deletebtn-1645"
                  onClick={[Function]}
                >
                  <ForwardRef(IconButton)
                    aria-label="Delete"
                    classes={
                      Object {
                        "colorInherit": "MuiIconButton-colorInherit",
                        "colorPrimary": "MuiIconButton-colorPrimary",
                        "colorSecondary": "MuiIconButton-colorSecondary",
                        "disabled": "Mui-disabled",
                        "edgeEnd": "MuiIconButton-edgeEnd",
                        "edgeStart": "MuiIconButton-edgeStart",
                        "label": "MuiIconButton-label",
                        "root": "MuiIconButton-root",
                        "sizeSmall": "MuiIconButton-sizeSmall",
                      }
                    }
                    edge="end"
                    id="checkbox-list-deletebtn-1645"
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      aria-label="Delete"
                      centerRipple={true}
                      className="MuiIconButton-root MuiIconButton-edgeEnd"
                      disabled={false}
                      focusRipple={true}
                      id="checkbox-list-deletebtn-1645"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        aria-label="Delete"
                        centerRipple={true}
                        className="MuiIconButton-root MuiIconButton-edgeEnd"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        disabled={false}
                        focusRipple={true}
                        id="checkbox-list-deletebtn-1645"
                        onClick={[Function]}
                      >
                        <button
                          aria-label="Delete"
                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeEnd"
                          disabled={false}
                          id="checkbox-list-deletebtn-1645"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <span
                            className="MuiIconButton-label"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                          <NoSsr>
                            <WithStyles(undefined)
                              center={true}
                            >
                              <ForwardRef(TouchRipple)
                                center={true}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(undefined)>
                          </NoSsr>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(IconButton)>
                </WithStyles(ForwardRef(IconButton))>
              </div>
            </ForwardRef(ListItemSecondaryAction)>
          </WithStyles(ForwardRef(ListItemSecondaryAction))>
        </li>
      </ForwardRef(ListItem)>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(ListItem))
      button={true}
      classes={
        Object {
          "container": "makeStyles-listItem-5",
        }
      }
      dense={true}
      key="1498"
    >
      <ForwardRef(ListItem)
        button={true}
        classes={
          Object {
            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
            "button": "MuiListItem-button",
            "container": "MuiListItem-container makeStyles-listItem-5",
            "dense": "MuiListItem-dense",
            "disabled": "Mui-disabled",
            "divider": "MuiListItem-divider",
            "focusVisible": "Mui-focusVisible",
            "gutters": "MuiListItem-gutters",
            "root": "MuiListItem-root",
            "secondaryAction": "MuiListItem-secondaryAction",
            "selected": "Mui-selected",
          }
        }
        dense={true}
      >
        <li
          className="MuiListItem-container makeStyles-listItem-5"
        >
          <WithStyles(ForwardRef(ButtonBase))
            className="MuiListItem-root MuiListItem-dense MuiListItem-gutters MuiListItem-button MuiListItem-secondaryAction"
            component="div"
            disabled={false}
            focusVisibleClassName="Mui-focusVisible"
          >
            <ForwardRef(ButtonBase)
              className="MuiListItem-root MuiListItem-dense MuiListItem-gutters MuiListItem-button MuiListItem-secondaryAction"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="div"
              disabled={false}
              focusVisibleClassName="Mui-focusVisible"
            >
              <div
                aria-disabled={false}
                className="MuiButtonBase-root MuiListItem-root MuiListItem-dense MuiListItem-gutters MuiListItem-button MuiListItem-secondaryAction"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={0}
              >
                <WithStyles(ForwardRef(ListItemIcon))
                  key=".0"
                >
                  <ForwardRef(ListItemIcon)
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                        "root": "MuiListItemIcon-root",
                      }
                    }
                  >
                    <div
                      className="MuiListItemIcon-root"
                    >
                      <WithStyles(ForwardRef(Checkbox))
                        checked={false}
                        disableRipple={true}
                        edge="start"
                        inputProps={
                          Object {
                            "aria-labelledby": "checkbox-list-label-1498",
                          }
                        }
                        onClick={[Function]}
                        tabIndex={-1}
                      >
                        <ForwardRef(Checkbox)
                          checked={false}
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "colorPrimary": "MuiCheckbox-colorPrimary",
                              "colorSecondary": "MuiCheckbox-colorSecondary",
                              "disabled": "Mui-disabled",
                              "indeterminate": "MuiCheckbox-indeterminate",
                              "root": "MuiCheckbox-root",
                            }
                          }
                          disableRipple={true}
                          edge="start"
                          inputProps={
                            Object {
                              "aria-labelledby": "checkbox-list-label-1498",
                            }
                          }
                          onClick={[Function]}
                          tabIndex={-1}
                        >
                          <WithStyles(ForwardRef(SwitchBase))
                            checked={false}
                            checkedIcon={<UNDEFINED />}
                            classes={
                              Object {
                                "checked": "Mui-checked",
                                "disabled": "Mui-disabled",
                                "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                              }
                            }
                            color="secondary"
                            disableRipple={true}
                            disabled={false}
                            edge="start"
                            icon={<UNDEFINED />}
                            inputProps={
                              Object {
                                "aria-labelledby": "checkbox-list-label-1498",
                                "data-indeterminate": false,
                              }
                            }
                            onClick={[Function]}
                            tabIndex={-1}
                            type="checkbox"
                          >
                            <ForwardRef(SwitchBase)
                              checked={false}
                              checkedIcon={<UNDEFINED />}
                              classes={
                                Object {
                                  "checked": "PrivateSwitchBase-checked-29 Mui-checked",
                                  "disabled": "PrivateSwitchBase-disabled-30 Mui-disabled",
                                  "input": "PrivateSwitchBase-input-31",
                                  "root": "PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary",
                                }
                              }
                              color="secondary"
                              disableRipple={true}
                              disabled={false}
                              edge="start"
                              icon={<UNDEFINED />}
                              inputProps={
                                Object {
                                  "aria-labelledby": "checkbox-list-label-1498",
                                  "data-indeterminate": false,
                                }
                              }
                              onClick={[Function]}
                              tabIndex={-1}
                              type="checkbox"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                className="PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                color="secondary"
                                component="span"
                                disableRipple={true}
                                disabled={false}
                                edge="start"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  className="PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  color="secondary"
                                  component="span"
                                  disableRipple={true}
                                  disabled={false}
                                  edge="start"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary MuiIconButton-edgeStart"
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary MuiIconButton-edgeStart"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        aria-disabled={false}
                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-28 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary MuiIconButton-edgeStart"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <input
                                            aria-labelledby="checkbox-list-label-1498"
                                            checked={false}
                                            className="PrivateSwitchBase-input-31"
                                            data-indeterminate={false}
                                            disabled={false}
                                            onChange={[Function]}
                                            tabIndex={-1}
                                            type="checkbox"
                                          />
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </span>
                                      </span>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </ForwardRef(SwitchBase)>
                          </WithStyles(ForwardRef(SwitchBase))>
                        </ForwardRef(Checkbox)>
                      </WithStyles(ForwardRef(Checkbox))>
                    </div>
                  </ForwardRef(ListItemIcon)>
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))
                  className=""
                  id="checkbox-list-label-1498"
                  key=".1"
                  primary="Valami"
                >
                  <ForwardRef(ListItemText)
                    className=""
                    classes={
                      Object {
                        "dense": "MuiListItemText-dense",
                        "inset": "MuiListItemText-inset",
                        "multiline": "MuiListItemText-multiline",
                        "primary": "MuiListItemText-primary",
                        "root": "MuiListItemText-root",
                        "secondary": "MuiListItemText-secondary",
                      }
                    }
                    id="checkbox-list-label-1498"
                    primary="Valami"
                  >
                    <div
                      className="MuiListItemText-root MuiListItemText-dense"
                      id="checkbox-list-label-1498"
                    >
                      <WithStyles(ForwardRef(Typography))
                        className="MuiListItemText-primary"
                        component="span"
                        variant="body2"
                      >
                        <ForwardRef(Typography)
                          className="MuiListItemText-primary"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          component="span"
                          variant="body2"
                        >
                          <span
                            className="MuiTypography-root MuiListItemText-primary MuiTypography-body2"
                          >
                            Valami
                          </span>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </div>
                  </ForwardRef(ListItemText)>
                </WithStyles(ForwardRef(ListItemText))>
                <NoSsr>
                  <WithStyles(undefined)
                    center={false}
                  >
                    <ForwardRef(TouchRipple)
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child",
                          "childLeaving": "MuiTouchRipple-childLeaving",
                          "childPulsate": "MuiTouchRipple-childPulsate",
                          "ripple": "MuiTouchRipple-ripple",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                          "root": "MuiTouchRipple-root",
                        }
                      }
                    >
                      <span
                        className="MuiTouchRipple-root"
                      >
                        <TransitionGroup
                          childFactory={[Function]}
                          component={null}
                          exit={true}
                        />
                      </span>
                    </ForwardRef(TouchRipple)>
                  </WithStyles(undefined)>
                </NoSsr>
              </div>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
          <WithStyles(ForwardRef(ListItemSecondaryAction))
            className="makeStyles-listItemSecondaryAction-4"
            key=".2"
          >
            <ForwardRef(ListItemSecondaryAction)
              className="makeStyles-listItemSecondaryAction-4"
              classes={
                Object {
                  "root": "MuiListItemSecondaryAction-root",
                }
              }
            >
              <div
                className="MuiListItemSecondaryAction-root makeStyles-listItemSecondaryAction-4"
              >
                <WithStyles(ForwardRef(IconButton))
                  aria-label="Delete"
                  edge="end"
                  id="checkbox-list-deletebtn-1498"
                  onClick={[Function]}
                >
                  <ForwardRef(IconButton)
                    aria-label="Delete"
                    classes={
                      Object {
                        "colorInherit": "MuiIconButton-colorInherit",
                        "colorPrimary": "MuiIconButton-colorPrimary",
                        "colorSecondary": "MuiIconButton-colorSecondary",
                        "disabled": "Mui-disabled",
                        "edgeEnd": "MuiIconButton-edgeEnd",
                        "edgeStart": "MuiIconButton-edgeStart",
                        "label": "MuiIconButton-label",
                        "root": "MuiIconButton-root",
                        "sizeSmall": "MuiIconButton-sizeSmall",
                      }
                    }
                    edge="end"
                    id="checkbox-list-deletebtn-1498"
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      aria-label="Delete"
                      centerRipple={true}
                      className="MuiIconButton-root MuiIconButton-edgeEnd"
                      disabled={false}
                      focusRipple={true}
                      id="checkbox-list-deletebtn-1498"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        aria-label="Delete"
                        centerRipple={true}
                        className="MuiIconButton-root MuiIconButton-edgeEnd"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        disabled={false}
                        focusRipple={true}
                        id="checkbox-list-deletebtn-1498"
                        onClick={[Function]}
                      >
                        <button
                          aria-label="Delete"
                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeEnd"
                          disabled={false}
                          id="checkbox-list-deletebtn-1498"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <span
                            className="MuiIconButton-label"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                          <NoSsr>
                            <WithStyles(undefined)
                              center={true}
                            >
                              <ForwardRef(TouchRipple)
                                center={true}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(undefined)>
                          </NoSsr>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(IconButton)>
                </WithStyles(ForwardRef(IconButton))>
              </div>
            </ForwardRef(ListItemSecondaryAction)>
          </WithStyles(ForwardRef(ListItemSecondaryAction))>
        </li>
      </ForwardRef(ListItem)>
    </WithStyles(ForwardRef(ListItem))>
  </div>
</ListPanel>
`;
